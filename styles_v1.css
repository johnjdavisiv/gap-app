@import url('https://fonts.googleapis.com/css2?family=PT+Mono&family=Roboto:ital,wght@0,400;0,700;0,900;1,400;1,700;1,900&display=swap');


/* TODO: looks good so far but need to iteratively add the other stuff */

:root {
    --primary-color: #007bff;
    --dark-accent: #0056b3;
    --hover-color: #bde2ff;
    --active-color:#2196F3;
    --link-hover-color:#84caff;
    --soft-white: #f7f7f7;
    --soft-black: #333;
    --app-max-width: 800px;
    --app-min-width: 25em;
    --toggle-color: #e9ecef;
    --slider-width: 54px;
    --slider-height: 30px;
    --alert-color:#92400e;
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body, html {
    font-family: 'Roboto', sans-serif;
    min-width: 320px;
    scroll-behavior: smooth;
}

body {
    background-color: var(--soft-white);
}

/* Generic text settings */

a {
    color: var(--primary-color);
    text-decoration: none;
}

h1 {
    text-align: center;
    font-size: 1.5em;
}

header {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 10px;
    background-color: #f3f3f3;
    height: 4em;
}

header img.logo {
    height: 50px; /* Adjust logo size */
}

header .home-link {
    white-space: nowrap;
    text-decoration: none;
    font-size: 1.5em;
    color: black;
    margin: 0 10px; /* Gives some space around the site name */
}

.header-content{
    max-width: var(--app-max-width); /* Sets the maximum width of the header content */
    width: 100%; /* Ensures the content fills the container until it reaches max-width */
    display: flex; /* Enables flexbox layout */
    justify-content: space-between; /* Distributes space between items */
    align-items: center; /* Aligns items vertically */
    padding: 5px; /* Adds some spacing inside the header content */
}

/* Header/footer formatting */
.header-content a, footer a{
    color: var(--soft-white);
}

nav a {
    text-decoration: none;
    white-space: nowrap;
    margin: 0 10px;
}

header, footer {
    background-color: var(--soft-black); /* a dark background for contrast */
    color: var(--soft-white); /* white text for visibility against the dark background */
}

footer {
    text-align: center;
    padding: 10px;
    position: relative;
    bottom: 0;
    width: 100%;
}

/* Main content */
main {
    max-width: var(--app-max-width);
    background-color: white;
    margin: 0 auto;
    padding: 0.5em 1.5em;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* subtle shadow for depth */
}


/* So as-is the padding is set by the <main> left/right padding */
/* And I think that's what we wnat */
.app-box  {
    display: flex;
    flex-direction: column;
    align-items: center;
}


.arrow-container{
    background-color: beige;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}


.arrow-box {
    display:flex;
}


/* Pace input dials */

.digitbox {
    font-size: 2em;
    background-color: white;
    display:flex;
    flex-direction: column;
    align-items: center;
}

.pace-box {
    display:flex;
    flex-direction:row;
    justify-content: center;
    width:100%;
}

.left-dummy {
    flex:1;
}

.clock {
    flex:1;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
}

.unit-stack {
    flex: 1;
    display:flex;
    flex-direction: column;
    justify-content: center;
}

.unit-stack-horiz {
    flex: 1;
    display:flex;
    flex-direction: row;
    justify-content: center;
    gap: 0.3em;
}

.pace-toggle {
    width: 5.5ch;
    flex: 0;
}

.output-toggle {
    width: 5.5ch
}


.svg-arrow {
    font-size: 1.5em;
    outline: none; /* remove focus outline (consider accessibility) */
    cursor: pointer;
    border: solid var(--dark-accent) 2px;
    border-radius: 10px;
    padding: 0 0px;
    margin: 4px;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); /* horizontal offset, vertical offset, blur radius, color */
}


.unit-text {
    height:3em;
    display:flex;
    flex-direction: column;
    justify-content: end;
    padding: 0 0.75em 0 0;
    font-family:'PT Mono', monospace;
    font-weight:bold;
}


.unit-stack li {
    border-radius:5px;
}

.unit-toggle, .hill-toggle{
    background-color: var(--toggle-color);
    border: none;
    border-radius:5px;
    font-size:1.1em;
    padding: 0.25em 0.5em;
    margin: 0.2em 0em;
    cursor:pointer;
    min-width: 3ch;
}


/* Spacer and within spacer text styling */

.spacer {
    font-size: 1.5em;
    width:100%;
    display:flex;
    justify-content: center;
    padding: 0.5em;
}

#pace-or-effort, .rise-unit{
    font-weight:bold;
}

* {
    border: solid blue 1px;
}



.toggle-box {
    align-items: center;
    justify-content: space-between;
    flex: 1;
}

.incline-unit-box {
    padding: 0.5em 0;

}

/* Incline box */
.incline-box {
    width: 100%;

}

/*  >> and > button styling */
.pct-button {
    outline: none; /* remove focus outline (consider accessibility) */
    cursor: pointer;
    border: solid var(--primary-color) 2px;
    background-color: white;
    border-radius: 50%;
    margin: 5px;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); 
    height: 2em;
    width: 2em;
    display: flex;
    align-items:center;
    justify-content: center;
}

.incline-pct.digit {
    font-weight: normal;
}

.digit {
    font-family:'PT Mono', monospace;
    font-weight:bold;
    font-size: 2em;
}


.incline-text {
    font-family: 'Roboto', sans-serif;
    display:flex;
    align-items: center;
}


.incline-label {
    font-size: 1.5em;
    font-family: 'Roboto', sans-serif;
    font-weight: normal;
    
}

/* Uphill / downhill indicator */

.up-down-row {
    display: flex;
    align-items: center;
    justify-content: center;
    gap:1em;
    padding: 0.4em 0em;
    font-size:1.5em;
}

#uphill-or-downhill {
    font-weight: bold;
}

.hill-button{
    font-size:2em;
    border:none;
    transition: transform 0.3s; /* This will make the rotation smooth */
    transform-origin: center;
}


.hill-outer, .incline-box {
    min-height: 5em;
}

.hill-outer {
    display:flex;
    justify-content: center;
}

.input-row {
    display:flex;
    justify-content: center;
}


#rise {
    width: 7ch;
}



.rise-run-row {
    padding: 0.25em 0;
    display:flex;
    justify-content: space-between;
}


.vert-row {
    padding: 0.25em 0;
    display:flex;
    justify-content: center;
}

.slug {
    display:flex;
    flex-direction: row;
}


.rise-unit, .rise-text {
    font-size: 1.25em;
    flex:0;
    white-space: nowrap;
}


.hill-input {
    font-size: 1.25em;
    width: 3em;
    margin: 0 0.3em;
}

.vert-input {
    width: 4em;
}

/* Grade unit selector */

.unit-row {
    white-space: nowrap;
    width:100%;
    display:flex;
    justify-content: center;
    gap: 0.2em;
}


/* Results */

.pace-result, .convert-result {
    font-family:'PT Mono', monospace;
    font-weight:bold;
    font-size: 4.5em;
}


/* Material icons */


.material-symbols-outlined {
    font-variation-settings:
    'FILL' 0,
    'wght' 400,
    'GRAD' 0,
    'opsz' 24;
    color:var(--primary-color);
    background: transparent;
}

.material-icons{
    color: var(--primary-color);
    background-color: white;
    font-weight: bold;
}


/* Toggle switch */


/* Toggle slider */
/* The switch - the box around the slider */
.switch {
    position: relative;
    display: inline-block;
    width: var(--slider-width, 60px); /* Default width */
    height: var(--slider-height, 34px); /* Default height */
}

/* Hide default HTML checkbox */
.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

/* The slider */
.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: background-color .3s;
    border-radius: calc(var(--slider-height, 34px) / 2); /* Make the slider rounded based on height */
}

.slider:before {
    position: absolute;
    content: "";
    height: calc(var(--slider-height, 34px) - 8px); /* Adjust based on slider height */
    width: calc(var(--slider-height, 34px) - 8px); /* Make the circle's size responsive to the slider's height */
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: transform .4s;
    border-radius: 50%; /* Always fully rounded */
}

input:checked + .slider {
    background-color: #2196F3;
}

input:focus + .slider {
    box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
    transform: translateX(calc(var(--slider-width, 60px) - var(--slider-height, 34px))); /* Move circle to the right */
}



/* Affecting things that are active */

/* Coloring buttons when active */
.unit-toggle:active{
    background-color: var(--active-color);
}

.svg-arrow:active, .pct-button:active {
    /* Must be AFTER hover def! */
    background-color: var(--link-hover-color);
    /* color: white; */
}

/* IF the to/from unit buttons are active */
.active {
    background-color: var(--active-color);
    color:white;
}

.i-note:active {
    color:white;
    border: solid var(--link-hover-color) 2px;
}

/* up to top arrow */
.material-icons.up  {
    padding: 0 0 0 0.5em;
    font-size: 1.4rem;
    color: gray;
    text-decoration: none;;
}



.mirrored {
    transform: scaleX(-1);
}

.i-note {
    outline: none;
    cursor: pointer;
    border: solid var(--primary-color) 2px;
    background-color: white;
    font-size: 1.25rem;
    width:1.25em;
    height:1.25em;
    display:flex;
    flex: 0 0 auto;
    border-radius: 50%;
    color: #2196F3;
    align-items: center;
    justify-content: center; 
    text-decoration: none;
}







/* Hover only on mice */
@media (hover: hover) {
    .svg-arrow:hover, .pct-button:hover, .unit-toggle:hover, .hill-toggle:hover {
        background-color: var(--hover-color);
        box-shadow: 0px 6px 8px rgba(0, 0, 0, 0.12);
    }
    
    .hill-button:hover {
        cursor:pointer;
        color: var(--dark-accent);
    }
    
    
    .i-note:hover{
        background-color: var(--hover-color);
        cursor:pointer;
    }
    
    .flip-button:hover {
        color: var(--dark-accent);
        cursor: pointer;
    }
    .unit-toggle:hover, .hill-toggle:hover {
        color:black;
    }
    
    .logo-link a:hover{
        color:var(--link-hover-color);
    }
    
    .menu a:hover {
        color:var(--link-hover-color);
    }
    
    .material-icons.up:hover  {
        color:var(--primary-color);
    }
    
    .bulb-icon:hover{
        background-color: #fefce8;
    }
    
    
    tbody tr:hover {
        background-color: #f2f2f2;
    }
}



/* Responsive stuff, tweak as needed */


/* Some downsizing for mobile usibility */
@media (max-width: 500px) {

    h1 {
        font-size: 1.0em;
    }

    .hill-outer {
        font-size:0.8em;
    }
    .unit-toggle, .hill-toggle{
        font-size:1em;
        padding: 0.25em 0.25em;
        margin: 0.2em 0em;
        cursor:pointer;
        min-width: 3ch;
    }
}

@media (max-width: 400px) {
    .header-content, .header-content a, nav a {
        font-size: 1em; /* Reduce font size */
    }

    .header-content {
        padding: 5px; /* Reduce padding for more space */
    }

    .svg-arrow {
        font-size: 1.0em;
    }


    .digit {
        font-size: 1.5em;
    }

    .pct-button {
        font-size: 1.0em;
        margin: 2px;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); 
        height: 2em;
        width: 2em;
        display: flex;
        align-items:center;
        justify-content: center;
    }


}


/* At the bottom I guess */

.hidden {
    display: none;
}


